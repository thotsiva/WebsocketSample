name: Code Coverage Check

on:
  pull_request:
    branches:
      - development
    paths:
      - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Run Maven Build and Tests
      - name: Run Maven Build and Tests
        run: mvn clean install

      # Step 5: Run JaCoCo to generate code coverage report
      - name: Generate JaCoCo Coverage Report
        run: mvn jacoco:report

      # Step 6: Check code coverage and enforce threshold
      - name: Enforce 80% Code Coverage
        run: |
          # Extract the coverage percentage from the JaCoCo report
          COVERAGE=$(mvn org.jacoco:jacoco-maven-plugin:check | grep "Total coverage" | awk '{print $4}' | sed 's/%//')
          echo "Code coverage is ${COVERAGE}%"
          
          # Output coverage details to GitHub PR
          echo "Code coverage is ${COVERAGE}%"
          
          # Check if coverage is below 80%
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Error: Code coverage is below the threshold of 80%. Please add more tests."
            exit 1
          fi
